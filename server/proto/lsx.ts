// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.176.0
//   protoc               v3.19.2
// source: lsx.proto

/* eslint-disable */
import * as _m0 from "protobufjs/minimal";
import {
  BombArea_Request,
  BombArea_Response,
  BombBase_Request,
  BombBase_Response,
  GetBombAreaState_Request,
  GetBombAreaState_Response,
  GetModeSilentState_Request,
  GetModeSilentState_Response,
  SetModeSilentState_Request,
  SetModeSilentState_Response,
} from "./lsx.drone";
import {
  GetFluffFiles_Request,
  GetFluffFiles_Response,
  GetFluffState_Request,
  GetFluffState_Response,
  SetFluffState_Request,
  SetFluffState_Response,
} from "./lsx.fluff";
import {
  GetLightDmxState_Request,
  GetLightDmxState_Response,
  GetLightLockState_Request,
  GetLightLockState_Response,
  GetLightPowerState_Request,
  GetLightPowerState_Response,
  GetLightSwitchState_Request,
  GetLightSwitchState_Response,
  SetLightDmxState_Request,
  SetLightDmxState_Response,
  SetLightLockState_Request,
  SetLightLockState_Response,
  SetLightPowerState_Request,
  SetLightPowerState_Response,
  SetLightSwitchState_Request,
  SetLightSwitchState_Response,
} from "./lsx.light";
import {
  GetAutoLockdown_Request,
  GetAutoLockdown_Response,
  GetLockdownAnnouncements_Request,
  GetLockdownAnnouncements_Response,
  GetLockdownState_Request,
  GetLockdownState_Response,
  SetAutoLockdown_Request,
  SetAutoLockdown_Response,
  SetLockdownAnnouncements_Request,
  SetLockdownAnnouncements_Response,
  SetLockdownState_Request,
  SetLockdownState_Response,
} from "./lsx.lockdown";
import {
  GetPowerPlantState_Request,
  GetPowerPlantState_Response,
  SetPowerPlantState_Request,
  SetPowerPlantState_Response,
} from "./lsx.power";

export const protobufPackage = "";

export interface Request {
  getPowerPlantState?: GetPowerPlantState_Request | undefined;
  setPowerPlantState?:
    | SetPowerPlantState_Request
    | undefined;
  /**
   * GetPowerLineState.Request get_power_line_state = 3;
   * SetPowerLineState.Request set_power_line_state = 4;
   */
  getAnnouncementFiles?: GetAnnouncementFiles_Request | undefined;
  getLockdownState?: GetLockdownState_Request | undefined;
  setLockdownState?: SetLockdownState_Request | undefined;
  getAutoLockdown?: GetAutoLockdown_Request | undefined;
  setAutoLockdown?: SetAutoLockdown_Request | undefined;
  getLockdownAnnouncements?: GetLockdownAnnouncements_Request | undefined;
  setLockdownAnnouncements?: SetLockdownAnnouncements_Request | undefined;
  getFluffFiles?: GetFluffFiles_Request | undefined;
  getFluffState?: GetFluffState_Request | undefined;
  setFluffState?: SetFluffState_Request | undefined;
  playAnnouncement?: PlayAnnouncement_Request | undefined;
  getModeSilentState?: GetModeSilentState_Request | undefined;
  setModeSilentState?: SetModeSilentState_Request | undefined;
  bombBase?: BombBase_Request | undefined;
  bombArea?: BombArea_Request | undefined;
  getBombAreaState?:
    | GetBombAreaState_Request
    | undefined;
  /** Light */
  getLightPowerState?: GetLightPowerState_Request | undefined;
  setLightPowerState?: SetLightPowerState_Request | undefined;
  getLightSwitchState?: GetLightSwitchState_Request | undefined;
  setLightSwitchState?: SetLightSwitchState_Request | undefined;
  getLightDmxState?: GetLightDmxState_Request | undefined;
  setLightDmxState?: SetLightDmxState_Request | undefined;
  getLightLockState?: GetLightLockState_Request | undefined;
  setLightLockState?: SetLightLockState_Request | undefined;
}

export interface Response {
  getPowerPlantState?: GetPowerPlantState_Response | undefined;
  setPowerPlantState?:
    | SetPowerPlantState_Response
    | undefined;
  /**
   * GetPowerLineState.Response get_power_line_state = 3;
   * SetPowerLineState.Response set_power_line_state = 4;
   */
  getAnnouncementFiles?: GetAnnouncementFiles_Response | undefined;
  getLockdownState?: GetLockdownState_Response | undefined;
  setLockdownState?: SetLockdownState_Response | undefined;
  getAutoLockdown?: GetAutoLockdown_Response | undefined;
  setAutoLockdown?: SetAutoLockdown_Response | undefined;
  getLockdownAnnouncements?: GetLockdownAnnouncements_Response | undefined;
  setLockdownAnnouncements?: SetLockdownAnnouncements_Response | undefined;
  getFluffFiles?: GetFluffFiles_Response | undefined;
  getFluffState?: GetFluffState_Response | undefined;
  setFluffState?: SetFluffState_Response | undefined;
  playAnnouncement?: PlayAnnouncement_Response | undefined;
  getModeSilentState?: GetModeSilentState_Response | undefined;
  setModeSilentState?: SetModeSilentState_Response | undefined;
  bombBase?: BombBase_Response | undefined;
  bombArea?: BombArea_Response | undefined;
  getBombAreaState?:
    | GetBombAreaState_Response
    | undefined;
  /** Light */
  getLightPowerState?: GetLightPowerState_Response | undefined;
  setLightPowerState?: SetLightPowerState_Response | undefined;
  getLightSwitchState?: GetLightSwitchState_Response | undefined;
  setLightSwitchState?: SetLightSwitchState_Response | undefined;
  getLightDmxState?: GetLightDmxState_Response | undefined;
  setLightDmxState?: SetLightDmxState_Response | undefined;
  getLightLockState?: GetLightLockState_Response | undefined;
  setLightLockState?: SetLightLockState_Response | undefined;
}

export interface Error {
  type: string;
  message: string;
}

export interface LsxMessage {
  id: string;
  request?: Request | undefined;
  response?: Response | undefined;
  error?: Error | undefined;
}

export interface GetAnnouncementFiles {
}

export interface GetAnnouncementFiles_Response {
  files: string[];
}

export interface GetAnnouncementFiles_Request {
}

export interface PlayAnnouncement {
}

export interface PlayAnnouncement_Request {
  filepath: string;
}

export interface PlayAnnouncement_Response {
}

function createBaseRequest(): Request {
  return {
    getPowerPlantState: undefined,
    setPowerPlantState: undefined,
    getAnnouncementFiles: undefined,
    getLockdownState: undefined,
    setLockdownState: undefined,
    getAutoLockdown: undefined,
    setAutoLockdown: undefined,
    getLockdownAnnouncements: undefined,
    setLockdownAnnouncements: undefined,
    getFluffFiles: undefined,
    getFluffState: undefined,
    setFluffState: undefined,
    playAnnouncement: undefined,
    getModeSilentState: undefined,
    setModeSilentState: undefined,
    bombBase: undefined,
    bombArea: undefined,
    getBombAreaState: undefined,
    getLightPowerState: undefined,
    setLightPowerState: undefined,
    getLightSwitchState: undefined,
    setLightSwitchState: undefined,
    getLightDmxState: undefined,
    setLightDmxState: undefined,
    getLightLockState: undefined,
    setLightLockState: undefined,
  };
}

export const Request = {
  encode(message: Request, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.getPowerPlantState !== undefined) {
      GetPowerPlantState_Request.encode(message.getPowerPlantState, writer.uint32(10).fork()).ldelim();
    }
    if (message.setPowerPlantState !== undefined) {
      SetPowerPlantState_Request.encode(message.setPowerPlantState, writer.uint32(18).fork()).ldelim();
    }
    if (message.getAnnouncementFiles !== undefined) {
      GetAnnouncementFiles_Request.encode(message.getAnnouncementFiles, writer.uint32(42).fork()).ldelim();
    }
    if (message.getLockdownState !== undefined) {
      GetLockdownState_Request.encode(message.getLockdownState, writer.uint32(50).fork()).ldelim();
    }
    if (message.setLockdownState !== undefined) {
      SetLockdownState_Request.encode(message.setLockdownState, writer.uint32(58).fork()).ldelim();
    }
    if (message.getAutoLockdown !== undefined) {
      GetAutoLockdown_Request.encode(message.getAutoLockdown, writer.uint32(66).fork()).ldelim();
    }
    if (message.setAutoLockdown !== undefined) {
      SetAutoLockdown_Request.encode(message.setAutoLockdown, writer.uint32(74).fork()).ldelim();
    }
    if (message.getLockdownAnnouncements !== undefined) {
      GetLockdownAnnouncements_Request.encode(message.getLockdownAnnouncements, writer.uint32(82).fork()).ldelim();
    }
    if (message.setLockdownAnnouncements !== undefined) {
      SetLockdownAnnouncements_Request.encode(message.setLockdownAnnouncements, writer.uint32(90).fork()).ldelim();
    }
    if (message.getFluffFiles !== undefined) {
      GetFluffFiles_Request.encode(message.getFluffFiles, writer.uint32(98).fork()).ldelim();
    }
    if (message.getFluffState !== undefined) {
      GetFluffState_Request.encode(message.getFluffState, writer.uint32(106).fork()).ldelim();
    }
    if (message.setFluffState !== undefined) {
      SetFluffState_Request.encode(message.setFluffState, writer.uint32(114).fork()).ldelim();
    }
    if (message.playAnnouncement !== undefined) {
      PlayAnnouncement_Request.encode(message.playAnnouncement, writer.uint32(122).fork()).ldelim();
    }
    if (message.getModeSilentState !== undefined) {
      GetModeSilentState_Request.encode(message.getModeSilentState, writer.uint32(130).fork()).ldelim();
    }
    if (message.setModeSilentState !== undefined) {
      SetModeSilentState_Request.encode(message.setModeSilentState, writer.uint32(138).fork()).ldelim();
    }
    if (message.bombBase !== undefined) {
      BombBase_Request.encode(message.bombBase, writer.uint32(146).fork()).ldelim();
    }
    if (message.bombArea !== undefined) {
      BombArea_Request.encode(message.bombArea, writer.uint32(154).fork()).ldelim();
    }
    if (message.getBombAreaState !== undefined) {
      GetBombAreaState_Request.encode(message.getBombAreaState, writer.uint32(162).fork()).ldelim();
    }
    if (message.getLightPowerState !== undefined) {
      GetLightPowerState_Request.encode(message.getLightPowerState, writer.uint32(170).fork()).ldelim();
    }
    if (message.setLightPowerState !== undefined) {
      SetLightPowerState_Request.encode(message.setLightPowerState, writer.uint32(178).fork()).ldelim();
    }
    if (message.getLightSwitchState !== undefined) {
      GetLightSwitchState_Request.encode(message.getLightSwitchState, writer.uint32(186).fork()).ldelim();
    }
    if (message.setLightSwitchState !== undefined) {
      SetLightSwitchState_Request.encode(message.setLightSwitchState, writer.uint32(194).fork()).ldelim();
    }
    if (message.getLightDmxState !== undefined) {
      GetLightDmxState_Request.encode(message.getLightDmxState, writer.uint32(202).fork()).ldelim();
    }
    if (message.setLightDmxState !== undefined) {
      SetLightDmxState_Request.encode(message.setLightDmxState, writer.uint32(210).fork()).ldelim();
    }
    if (message.getLightLockState !== undefined) {
      GetLightLockState_Request.encode(message.getLightLockState, writer.uint32(218).fork()).ldelim();
    }
    if (message.setLightLockState !== undefined) {
      SetLightLockState_Request.encode(message.setLightLockState, writer.uint32(226).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): Request {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.getPowerPlantState = GetPowerPlantState_Request.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.setPowerPlantState = SetPowerPlantState_Request.decode(reader, reader.uint32());
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.getAnnouncementFiles = GetAnnouncementFiles_Request.decode(reader, reader.uint32());
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.getLockdownState = GetLockdownState_Request.decode(reader, reader.uint32());
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.setLockdownState = SetLockdownState_Request.decode(reader, reader.uint32());
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.getAutoLockdown = GetAutoLockdown_Request.decode(reader, reader.uint32());
          continue;
        case 9:
          if (tag !== 74) {
            break;
          }

          message.setAutoLockdown = SetAutoLockdown_Request.decode(reader, reader.uint32());
          continue;
        case 10:
          if (tag !== 82) {
            break;
          }

          message.getLockdownAnnouncements = GetLockdownAnnouncements_Request.decode(reader, reader.uint32());
          continue;
        case 11:
          if (tag !== 90) {
            break;
          }

          message.setLockdownAnnouncements = SetLockdownAnnouncements_Request.decode(reader, reader.uint32());
          continue;
        case 12:
          if (tag !== 98) {
            break;
          }

          message.getFluffFiles = GetFluffFiles_Request.decode(reader, reader.uint32());
          continue;
        case 13:
          if (tag !== 106) {
            break;
          }

          message.getFluffState = GetFluffState_Request.decode(reader, reader.uint32());
          continue;
        case 14:
          if (tag !== 114) {
            break;
          }

          message.setFluffState = SetFluffState_Request.decode(reader, reader.uint32());
          continue;
        case 15:
          if (tag !== 122) {
            break;
          }

          message.playAnnouncement = PlayAnnouncement_Request.decode(reader, reader.uint32());
          continue;
        case 16:
          if (tag !== 130) {
            break;
          }

          message.getModeSilentState = GetModeSilentState_Request.decode(reader, reader.uint32());
          continue;
        case 17:
          if (tag !== 138) {
            break;
          }

          message.setModeSilentState = SetModeSilentState_Request.decode(reader, reader.uint32());
          continue;
        case 18:
          if (tag !== 146) {
            break;
          }

          message.bombBase = BombBase_Request.decode(reader, reader.uint32());
          continue;
        case 19:
          if (tag !== 154) {
            break;
          }

          message.bombArea = BombArea_Request.decode(reader, reader.uint32());
          continue;
        case 20:
          if (tag !== 162) {
            break;
          }

          message.getBombAreaState = GetBombAreaState_Request.decode(reader, reader.uint32());
          continue;
        case 21:
          if (tag !== 170) {
            break;
          }

          message.getLightPowerState = GetLightPowerState_Request.decode(reader, reader.uint32());
          continue;
        case 22:
          if (tag !== 178) {
            break;
          }

          message.setLightPowerState = SetLightPowerState_Request.decode(reader, reader.uint32());
          continue;
        case 23:
          if (tag !== 186) {
            break;
          }

          message.getLightSwitchState = GetLightSwitchState_Request.decode(reader, reader.uint32());
          continue;
        case 24:
          if (tag !== 194) {
            break;
          }

          message.setLightSwitchState = SetLightSwitchState_Request.decode(reader, reader.uint32());
          continue;
        case 25:
          if (tag !== 202) {
            break;
          }

          message.getLightDmxState = GetLightDmxState_Request.decode(reader, reader.uint32());
          continue;
        case 26:
          if (tag !== 210) {
            break;
          }

          message.setLightDmxState = SetLightDmxState_Request.decode(reader, reader.uint32());
          continue;
        case 27:
          if (tag !== 218) {
            break;
          }

          message.getLightLockState = GetLightLockState_Request.decode(reader, reader.uint32());
          continue;
        case 28:
          if (tag !== 226) {
            break;
          }

          message.setLightLockState = SetLightLockState_Request.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): Request {
    return {
      getPowerPlantState: isSet(object.getPowerPlantState)
        ? GetPowerPlantState_Request.fromJSON(object.getPowerPlantState)
        : undefined,
      setPowerPlantState: isSet(object.setPowerPlantState)
        ? SetPowerPlantState_Request.fromJSON(object.setPowerPlantState)
        : undefined,
      getAnnouncementFiles: isSet(object.getAnnouncementFiles)
        ? GetAnnouncementFiles_Request.fromJSON(object.getAnnouncementFiles)
        : undefined,
      getLockdownState: isSet(object.getLockdownState)
        ? GetLockdownState_Request.fromJSON(object.getLockdownState)
        : undefined,
      setLockdownState: isSet(object.setLockdownState)
        ? SetLockdownState_Request.fromJSON(object.setLockdownState)
        : undefined,
      getAutoLockdown: isSet(object.getAutoLockdown)
        ? GetAutoLockdown_Request.fromJSON(object.getAutoLockdown)
        : undefined,
      setAutoLockdown: isSet(object.setAutoLockdown)
        ? SetAutoLockdown_Request.fromJSON(object.setAutoLockdown)
        : undefined,
      getLockdownAnnouncements: isSet(object.getLockdownAnnouncements)
        ? GetLockdownAnnouncements_Request.fromJSON(object.getLockdownAnnouncements)
        : undefined,
      setLockdownAnnouncements: isSet(object.setLockdownAnnouncements)
        ? SetLockdownAnnouncements_Request.fromJSON(object.setLockdownAnnouncements)
        : undefined,
      getFluffFiles: isSet(object.getFluffFiles) ? GetFluffFiles_Request.fromJSON(object.getFluffFiles) : undefined,
      getFluffState: isSet(object.getFluffState) ? GetFluffState_Request.fromJSON(object.getFluffState) : undefined,
      setFluffState: isSet(object.setFluffState) ? SetFluffState_Request.fromJSON(object.setFluffState) : undefined,
      playAnnouncement: isSet(object.playAnnouncement)
        ? PlayAnnouncement_Request.fromJSON(object.playAnnouncement)
        : undefined,
      getModeSilentState: isSet(object.getModeSilentState)
        ? GetModeSilentState_Request.fromJSON(object.getModeSilentState)
        : undefined,
      setModeSilentState: isSet(object.setModeSilentState)
        ? SetModeSilentState_Request.fromJSON(object.setModeSilentState)
        : undefined,
      bombBase: isSet(object.bombBase) ? BombBase_Request.fromJSON(object.bombBase) : undefined,
      bombArea: isSet(object.bombArea) ? BombArea_Request.fromJSON(object.bombArea) : undefined,
      getBombAreaState: isSet(object.getBombAreaState)
        ? GetBombAreaState_Request.fromJSON(object.getBombAreaState)
        : undefined,
      getLightPowerState: isSet(object.getLightPowerState)
        ? GetLightPowerState_Request.fromJSON(object.getLightPowerState)
        : undefined,
      setLightPowerState: isSet(object.setLightPowerState)
        ? SetLightPowerState_Request.fromJSON(object.setLightPowerState)
        : undefined,
      getLightSwitchState: isSet(object.getLightSwitchState)
        ? GetLightSwitchState_Request.fromJSON(object.getLightSwitchState)
        : undefined,
      setLightSwitchState: isSet(object.setLightSwitchState)
        ? SetLightSwitchState_Request.fromJSON(object.setLightSwitchState)
        : undefined,
      getLightDmxState: isSet(object.getLightDmxState)
        ? GetLightDmxState_Request.fromJSON(object.getLightDmxState)
        : undefined,
      setLightDmxState: isSet(object.setLightDmxState)
        ? SetLightDmxState_Request.fromJSON(object.setLightDmxState)
        : undefined,
      getLightLockState: isSet(object.getLightLockState)
        ? GetLightLockState_Request.fromJSON(object.getLightLockState)
        : undefined,
      setLightLockState: isSet(object.setLightLockState)
        ? SetLightLockState_Request.fromJSON(object.setLightLockState)
        : undefined,
    };
  },

  toJSON(message: Request): unknown {
    const obj: any = {};
    if (message.getPowerPlantState !== undefined) {
      obj.getPowerPlantState = GetPowerPlantState_Request.toJSON(message.getPowerPlantState);
    }
    if (message.setPowerPlantState !== undefined) {
      obj.setPowerPlantState = SetPowerPlantState_Request.toJSON(message.setPowerPlantState);
    }
    if (message.getAnnouncementFiles !== undefined) {
      obj.getAnnouncementFiles = GetAnnouncementFiles_Request.toJSON(message.getAnnouncementFiles);
    }
    if (message.getLockdownState !== undefined) {
      obj.getLockdownState = GetLockdownState_Request.toJSON(message.getLockdownState);
    }
    if (message.setLockdownState !== undefined) {
      obj.setLockdownState = SetLockdownState_Request.toJSON(message.setLockdownState);
    }
    if (message.getAutoLockdown !== undefined) {
      obj.getAutoLockdown = GetAutoLockdown_Request.toJSON(message.getAutoLockdown);
    }
    if (message.setAutoLockdown !== undefined) {
      obj.setAutoLockdown = SetAutoLockdown_Request.toJSON(message.setAutoLockdown);
    }
    if (message.getLockdownAnnouncements !== undefined) {
      obj.getLockdownAnnouncements = GetLockdownAnnouncements_Request.toJSON(message.getLockdownAnnouncements);
    }
    if (message.setLockdownAnnouncements !== undefined) {
      obj.setLockdownAnnouncements = SetLockdownAnnouncements_Request.toJSON(message.setLockdownAnnouncements);
    }
    if (message.getFluffFiles !== undefined) {
      obj.getFluffFiles = GetFluffFiles_Request.toJSON(message.getFluffFiles);
    }
    if (message.getFluffState !== undefined) {
      obj.getFluffState = GetFluffState_Request.toJSON(message.getFluffState);
    }
    if (message.setFluffState !== undefined) {
      obj.setFluffState = SetFluffState_Request.toJSON(message.setFluffState);
    }
    if (message.playAnnouncement !== undefined) {
      obj.playAnnouncement = PlayAnnouncement_Request.toJSON(message.playAnnouncement);
    }
    if (message.getModeSilentState !== undefined) {
      obj.getModeSilentState = GetModeSilentState_Request.toJSON(message.getModeSilentState);
    }
    if (message.setModeSilentState !== undefined) {
      obj.setModeSilentState = SetModeSilentState_Request.toJSON(message.setModeSilentState);
    }
    if (message.bombBase !== undefined) {
      obj.bombBase = BombBase_Request.toJSON(message.bombBase);
    }
    if (message.bombArea !== undefined) {
      obj.bombArea = BombArea_Request.toJSON(message.bombArea);
    }
    if (message.getBombAreaState !== undefined) {
      obj.getBombAreaState = GetBombAreaState_Request.toJSON(message.getBombAreaState);
    }
    if (message.getLightPowerState !== undefined) {
      obj.getLightPowerState = GetLightPowerState_Request.toJSON(message.getLightPowerState);
    }
    if (message.setLightPowerState !== undefined) {
      obj.setLightPowerState = SetLightPowerState_Request.toJSON(message.setLightPowerState);
    }
    if (message.getLightSwitchState !== undefined) {
      obj.getLightSwitchState = GetLightSwitchState_Request.toJSON(message.getLightSwitchState);
    }
    if (message.setLightSwitchState !== undefined) {
      obj.setLightSwitchState = SetLightSwitchState_Request.toJSON(message.setLightSwitchState);
    }
    if (message.getLightDmxState !== undefined) {
      obj.getLightDmxState = GetLightDmxState_Request.toJSON(message.getLightDmxState);
    }
    if (message.setLightDmxState !== undefined) {
      obj.setLightDmxState = SetLightDmxState_Request.toJSON(message.setLightDmxState);
    }
    if (message.getLightLockState !== undefined) {
      obj.getLightLockState = GetLightLockState_Request.toJSON(message.getLightLockState);
    }
    if (message.setLightLockState !== undefined) {
      obj.setLightLockState = SetLightLockState_Request.toJSON(message.setLightLockState);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<Request>, I>>(base?: I): Request {
    return Request.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<Request>, I>>(object: I): Request {
    const message = createBaseRequest();
    message.getPowerPlantState = (object.getPowerPlantState !== undefined && object.getPowerPlantState !== null)
      ? GetPowerPlantState_Request.fromPartial(object.getPowerPlantState)
      : undefined;
    message.setPowerPlantState = (object.setPowerPlantState !== undefined && object.setPowerPlantState !== null)
      ? SetPowerPlantState_Request.fromPartial(object.setPowerPlantState)
      : undefined;
    message.getAnnouncementFiles = (object.getAnnouncementFiles !== undefined && object.getAnnouncementFiles !== null)
      ? GetAnnouncementFiles_Request.fromPartial(object.getAnnouncementFiles)
      : undefined;
    message.getLockdownState = (object.getLockdownState !== undefined && object.getLockdownState !== null)
      ? GetLockdownState_Request.fromPartial(object.getLockdownState)
      : undefined;
    message.setLockdownState = (object.setLockdownState !== undefined && object.setLockdownState !== null)
      ? SetLockdownState_Request.fromPartial(object.setLockdownState)
      : undefined;
    message.getAutoLockdown = (object.getAutoLockdown !== undefined && object.getAutoLockdown !== null)
      ? GetAutoLockdown_Request.fromPartial(object.getAutoLockdown)
      : undefined;
    message.setAutoLockdown = (object.setAutoLockdown !== undefined && object.setAutoLockdown !== null)
      ? SetAutoLockdown_Request.fromPartial(object.setAutoLockdown)
      : undefined;
    message.getLockdownAnnouncements =
      (object.getLockdownAnnouncements !== undefined && object.getLockdownAnnouncements !== null)
        ? GetLockdownAnnouncements_Request.fromPartial(object.getLockdownAnnouncements)
        : undefined;
    message.setLockdownAnnouncements =
      (object.setLockdownAnnouncements !== undefined && object.setLockdownAnnouncements !== null)
        ? SetLockdownAnnouncements_Request.fromPartial(object.setLockdownAnnouncements)
        : undefined;
    message.getFluffFiles = (object.getFluffFiles !== undefined && object.getFluffFiles !== null)
      ? GetFluffFiles_Request.fromPartial(object.getFluffFiles)
      : undefined;
    message.getFluffState = (object.getFluffState !== undefined && object.getFluffState !== null)
      ? GetFluffState_Request.fromPartial(object.getFluffState)
      : undefined;
    message.setFluffState = (object.setFluffState !== undefined && object.setFluffState !== null)
      ? SetFluffState_Request.fromPartial(object.setFluffState)
      : undefined;
    message.playAnnouncement = (object.playAnnouncement !== undefined && object.playAnnouncement !== null)
      ? PlayAnnouncement_Request.fromPartial(object.playAnnouncement)
      : undefined;
    message.getModeSilentState = (object.getModeSilentState !== undefined && object.getModeSilentState !== null)
      ? GetModeSilentState_Request.fromPartial(object.getModeSilentState)
      : undefined;
    message.setModeSilentState = (object.setModeSilentState !== undefined && object.setModeSilentState !== null)
      ? SetModeSilentState_Request.fromPartial(object.setModeSilentState)
      : undefined;
    message.bombBase = (object.bombBase !== undefined && object.bombBase !== null)
      ? BombBase_Request.fromPartial(object.bombBase)
      : undefined;
    message.bombArea = (object.bombArea !== undefined && object.bombArea !== null)
      ? BombArea_Request.fromPartial(object.bombArea)
      : undefined;
    message.getBombAreaState = (object.getBombAreaState !== undefined && object.getBombAreaState !== null)
      ? GetBombAreaState_Request.fromPartial(object.getBombAreaState)
      : undefined;
    message.getLightPowerState = (object.getLightPowerState !== undefined && object.getLightPowerState !== null)
      ? GetLightPowerState_Request.fromPartial(object.getLightPowerState)
      : undefined;
    message.setLightPowerState = (object.setLightPowerState !== undefined && object.setLightPowerState !== null)
      ? SetLightPowerState_Request.fromPartial(object.setLightPowerState)
      : undefined;
    message.getLightSwitchState = (object.getLightSwitchState !== undefined && object.getLightSwitchState !== null)
      ? GetLightSwitchState_Request.fromPartial(object.getLightSwitchState)
      : undefined;
    message.setLightSwitchState = (object.setLightSwitchState !== undefined && object.setLightSwitchState !== null)
      ? SetLightSwitchState_Request.fromPartial(object.setLightSwitchState)
      : undefined;
    message.getLightDmxState = (object.getLightDmxState !== undefined && object.getLightDmxState !== null)
      ? GetLightDmxState_Request.fromPartial(object.getLightDmxState)
      : undefined;
    message.setLightDmxState = (object.setLightDmxState !== undefined && object.setLightDmxState !== null)
      ? SetLightDmxState_Request.fromPartial(object.setLightDmxState)
      : undefined;
    message.getLightLockState = (object.getLightLockState !== undefined && object.getLightLockState !== null)
      ? GetLightLockState_Request.fromPartial(object.getLightLockState)
      : undefined;
    message.setLightLockState = (object.setLightLockState !== undefined && object.setLightLockState !== null)
      ? SetLightLockState_Request.fromPartial(object.setLightLockState)
      : undefined;
    return message;
  },
};

function createBaseResponse(): Response {
  return {
    getPowerPlantState: undefined,
    setPowerPlantState: undefined,
    getAnnouncementFiles: undefined,
    getLockdownState: undefined,
    setLockdownState: undefined,
    getAutoLockdown: undefined,
    setAutoLockdown: undefined,
    getLockdownAnnouncements: undefined,
    setLockdownAnnouncements: undefined,
    getFluffFiles: undefined,
    getFluffState: undefined,
    setFluffState: undefined,
    playAnnouncement: undefined,
    getModeSilentState: undefined,
    setModeSilentState: undefined,
    bombBase: undefined,
    bombArea: undefined,
    getBombAreaState: undefined,
    getLightPowerState: undefined,
    setLightPowerState: undefined,
    getLightSwitchState: undefined,
    setLightSwitchState: undefined,
    getLightDmxState: undefined,
    setLightDmxState: undefined,
    getLightLockState: undefined,
    setLightLockState: undefined,
  };
}

export const Response = {
  encode(message: Response, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.getPowerPlantState !== undefined) {
      GetPowerPlantState_Response.encode(message.getPowerPlantState, writer.uint32(10).fork()).ldelim();
    }
    if (message.setPowerPlantState !== undefined) {
      SetPowerPlantState_Response.encode(message.setPowerPlantState, writer.uint32(18).fork()).ldelim();
    }
    if (message.getAnnouncementFiles !== undefined) {
      GetAnnouncementFiles_Response.encode(message.getAnnouncementFiles, writer.uint32(42).fork()).ldelim();
    }
    if (message.getLockdownState !== undefined) {
      GetLockdownState_Response.encode(message.getLockdownState, writer.uint32(50).fork()).ldelim();
    }
    if (message.setLockdownState !== undefined) {
      SetLockdownState_Response.encode(message.setLockdownState, writer.uint32(58).fork()).ldelim();
    }
    if (message.getAutoLockdown !== undefined) {
      GetAutoLockdown_Response.encode(message.getAutoLockdown, writer.uint32(66).fork()).ldelim();
    }
    if (message.setAutoLockdown !== undefined) {
      SetAutoLockdown_Response.encode(message.setAutoLockdown, writer.uint32(74).fork()).ldelim();
    }
    if (message.getLockdownAnnouncements !== undefined) {
      GetLockdownAnnouncements_Response.encode(message.getLockdownAnnouncements, writer.uint32(82).fork()).ldelim();
    }
    if (message.setLockdownAnnouncements !== undefined) {
      SetLockdownAnnouncements_Response.encode(message.setLockdownAnnouncements, writer.uint32(90).fork()).ldelim();
    }
    if (message.getFluffFiles !== undefined) {
      GetFluffFiles_Response.encode(message.getFluffFiles, writer.uint32(98).fork()).ldelim();
    }
    if (message.getFluffState !== undefined) {
      GetFluffState_Response.encode(message.getFluffState, writer.uint32(106).fork()).ldelim();
    }
    if (message.setFluffState !== undefined) {
      SetFluffState_Response.encode(message.setFluffState, writer.uint32(114).fork()).ldelim();
    }
    if (message.playAnnouncement !== undefined) {
      PlayAnnouncement_Response.encode(message.playAnnouncement, writer.uint32(122).fork()).ldelim();
    }
    if (message.getModeSilentState !== undefined) {
      GetModeSilentState_Response.encode(message.getModeSilentState, writer.uint32(130).fork()).ldelim();
    }
    if (message.setModeSilentState !== undefined) {
      SetModeSilentState_Response.encode(message.setModeSilentState, writer.uint32(138).fork()).ldelim();
    }
    if (message.bombBase !== undefined) {
      BombBase_Response.encode(message.bombBase, writer.uint32(146).fork()).ldelim();
    }
    if (message.bombArea !== undefined) {
      BombArea_Response.encode(message.bombArea, writer.uint32(154).fork()).ldelim();
    }
    if (message.getBombAreaState !== undefined) {
      GetBombAreaState_Response.encode(message.getBombAreaState, writer.uint32(162).fork()).ldelim();
    }
    if (message.getLightPowerState !== undefined) {
      GetLightPowerState_Response.encode(message.getLightPowerState, writer.uint32(170).fork()).ldelim();
    }
    if (message.setLightPowerState !== undefined) {
      SetLightPowerState_Response.encode(message.setLightPowerState, writer.uint32(178).fork()).ldelim();
    }
    if (message.getLightSwitchState !== undefined) {
      GetLightSwitchState_Response.encode(message.getLightSwitchState, writer.uint32(186).fork()).ldelim();
    }
    if (message.setLightSwitchState !== undefined) {
      SetLightSwitchState_Response.encode(message.setLightSwitchState, writer.uint32(194).fork()).ldelim();
    }
    if (message.getLightDmxState !== undefined) {
      GetLightDmxState_Response.encode(message.getLightDmxState, writer.uint32(202).fork()).ldelim();
    }
    if (message.setLightDmxState !== undefined) {
      SetLightDmxState_Response.encode(message.setLightDmxState, writer.uint32(210).fork()).ldelim();
    }
    if (message.getLightLockState !== undefined) {
      GetLightLockState_Response.encode(message.getLightLockState, writer.uint32(218).fork()).ldelim();
    }
    if (message.setLightLockState !== undefined) {
      SetLightLockState_Response.encode(message.setLightLockState, writer.uint32(226).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): Response {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.getPowerPlantState = GetPowerPlantState_Response.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.setPowerPlantState = SetPowerPlantState_Response.decode(reader, reader.uint32());
          continue;
        case 5:
          if (tag !== 42) {
            break;
          }

          message.getAnnouncementFiles = GetAnnouncementFiles_Response.decode(reader, reader.uint32());
          continue;
        case 6:
          if (tag !== 50) {
            break;
          }

          message.getLockdownState = GetLockdownState_Response.decode(reader, reader.uint32());
          continue;
        case 7:
          if (tag !== 58) {
            break;
          }

          message.setLockdownState = SetLockdownState_Response.decode(reader, reader.uint32());
          continue;
        case 8:
          if (tag !== 66) {
            break;
          }

          message.getAutoLockdown = GetAutoLockdown_Response.decode(reader, reader.uint32());
          continue;
        case 9:
          if (tag !== 74) {
            break;
          }

          message.setAutoLockdown = SetAutoLockdown_Response.decode(reader, reader.uint32());
          continue;
        case 10:
          if (tag !== 82) {
            break;
          }

          message.getLockdownAnnouncements = GetLockdownAnnouncements_Response.decode(reader, reader.uint32());
          continue;
        case 11:
          if (tag !== 90) {
            break;
          }

          message.setLockdownAnnouncements = SetLockdownAnnouncements_Response.decode(reader, reader.uint32());
          continue;
        case 12:
          if (tag !== 98) {
            break;
          }

          message.getFluffFiles = GetFluffFiles_Response.decode(reader, reader.uint32());
          continue;
        case 13:
          if (tag !== 106) {
            break;
          }

          message.getFluffState = GetFluffState_Response.decode(reader, reader.uint32());
          continue;
        case 14:
          if (tag !== 114) {
            break;
          }

          message.setFluffState = SetFluffState_Response.decode(reader, reader.uint32());
          continue;
        case 15:
          if (tag !== 122) {
            break;
          }

          message.playAnnouncement = PlayAnnouncement_Response.decode(reader, reader.uint32());
          continue;
        case 16:
          if (tag !== 130) {
            break;
          }

          message.getModeSilentState = GetModeSilentState_Response.decode(reader, reader.uint32());
          continue;
        case 17:
          if (tag !== 138) {
            break;
          }

          message.setModeSilentState = SetModeSilentState_Response.decode(reader, reader.uint32());
          continue;
        case 18:
          if (tag !== 146) {
            break;
          }

          message.bombBase = BombBase_Response.decode(reader, reader.uint32());
          continue;
        case 19:
          if (tag !== 154) {
            break;
          }

          message.bombArea = BombArea_Response.decode(reader, reader.uint32());
          continue;
        case 20:
          if (tag !== 162) {
            break;
          }

          message.getBombAreaState = GetBombAreaState_Response.decode(reader, reader.uint32());
          continue;
        case 21:
          if (tag !== 170) {
            break;
          }

          message.getLightPowerState = GetLightPowerState_Response.decode(reader, reader.uint32());
          continue;
        case 22:
          if (tag !== 178) {
            break;
          }

          message.setLightPowerState = SetLightPowerState_Response.decode(reader, reader.uint32());
          continue;
        case 23:
          if (tag !== 186) {
            break;
          }

          message.getLightSwitchState = GetLightSwitchState_Response.decode(reader, reader.uint32());
          continue;
        case 24:
          if (tag !== 194) {
            break;
          }

          message.setLightSwitchState = SetLightSwitchState_Response.decode(reader, reader.uint32());
          continue;
        case 25:
          if (tag !== 202) {
            break;
          }

          message.getLightDmxState = GetLightDmxState_Response.decode(reader, reader.uint32());
          continue;
        case 26:
          if (tag !== 210) {
            break;
          }

          message.setLightDmxState = SetLightDmxState_Response.decode(reader, reader.uint32());
          continue;
        case 27:
          if (tag !== 218) {
            break;
          }

          message.getLightLockState = GetLightLockState_Response.decode(reader, reader.uint32());
          continue;
        case 28:
          if (tag !== 226) {
            break;
          }

          message.setLightLockState = SetLightLockState_Response.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): Response {
    return {
      getPowerPlantState: isSet(object.getPowerPlantState)
        ? GetPowerPlantState_Response.fromJSON(object.getPowerPlantState)
        : undefined,
      setPowerPlantState: isSet(object.setPowerPlantState)
        ? SetPowerPlantState_Response.fromJSON(object.setPowerPlantState)
        : undefined,
      getAnnouncementFiles: isSet(object.getAnnouncementFiles)
        ? GetAnnouncementFiles_Response.fromJSON(object.getAnnouncementFiles)
        : undefined,
      getLockdownState: isSet(object.getLockdownState)
        ? GetLockdownState_Response.fromJSON(object.getLockdownState)
        : undefined,
      setLockdownState: isSet(object.setLockdownState)
        ? SetLockdownState_Response.fromJSON(object.setLockdownState)
        : undefined,
      getAutoLockdown: isSet(object.getAutoLockdown)
        ? GetAutoLockdown_Response.fromJSON(object.getAutoLockdown)
        : undefined,
      setAutoLockdown: isSet(object.setAutoLockdown)
        ? SetAutoLockdown_Response.fromJSON(object.setAutoLockdown)
        : undefined,
      getLockdownAnnouncements: isSet(object.getLockdownAnnouncements)
        ? GetLockdownAnnouncements_Response.fromJSON(object.getLockdownAnnouncements)
        : undefined,
      setLockdownAnnouncements: isSet(object.setLockdownAnnouncements)
        ? SetLockdownAnnouncements_Response.fromJSON(object.setLockdownAnnouncements)
        : undefined,
      getFluffFiles: isSet(object.getFluffFiles) ? GetFluffFiles_Response.fromJSON(object.getFluffFiles) : undefined,
      getFluffState: isSet(object.getFluffState) ? GetFluffState_Response.fromJSON(object.getFluffState) : undefined,
      setFluffState: isSet(object.setFluffState) ? SetFluffState_Response.fromJSON(object.setFluffState) : undefined,
      playAnnouncement: isSet(object.playAnnouncement)
        ? PlayAnnouncement_Response.fromJSON(object.playAnnouncement)
        : undefined,
      getModeSilentState: isSet(object.getModeSilentState)
        ? GetModeSilentState_Response.fromJSON(object.getModeSilentState)
        : undefined,
      setModeSilentState: isSet(object.setModeSilentState)
        ? SetModeSilentState_Response.fromJSON(object.setModeSilentState)
        : undefined,
      bombBase: isSet(object.bombBase) ? BombBase_Response.fromJSON(object.bombBase) : undefined,
      bombArea: isSet(object.bombArea) ? BombArea_Response.fromJSON(object.bombArea) : undefined,
      getBombAreaState: isSet(object.getBombAreaState)
        ? GetBombAreaState_Response.fromJSON(object.getBombAreaState)
        : undefined,
      getLightPowerState: isSet(object.getLightPowerState)
        ? GetLightPowerState_Response.fromJSON(object.getLightPowerState)
        : undefined,
      setLightPowerState: isSet(object.setLightPowerState)
        ? SetLightPowerState_Response.fromJSON(object.setLightPowerState)
        : undefined,
      getLightSwitchState: isSet(object.getLightSwitchState)
        ? GetLightSwitchState_Response.fromJSON(object.getLightSwitchState)
        : undefined,
      setLightSwitchState: isSet(object.setLightSwitchState)
        ? SetLightSwitchState_Response.fromJSON(object.setLightSwitchState)
        : undefined,
      getLightDmxState: isSet(object.getLightDmxState)
        ? GetLightDmxState_Response.fromJSON(object.getLightDmxState)
        : undefined,
      setLightDmxState: isSet(object.setLightDmxState)
        ? SetLightDmxState_Response.fromJSON(object.setLightDmxState)
        : undefined,
      getLightLockState: isSet(object.getLightLockState)
        ? GetLightLockState_Response.fromJSON(object.getLightLockState)
        : undefined,
      setLightLockState: isSet(object.setLightLockState)
        ? SetLightLockState_Response.fromJSON(object.setLightLockState)
        : undefined,
    };
  },

  toJSON(message: Response): unknown {
    const obj: any = {};
    if (message.getPowerPlantState !== undefined) {
      obj.getPowerPlantState = GetPowerPlantState_Response.toJSON(message.getPowerPlantState);
    }
    if (message.setPowerPlantState !== undefined) {
      obj.setPowerPlantState = SetPowerPlantState_Response.toJSON(message.setPowerPlantState);
    }
    if (message.getAnnouncementFiles !== undefined) {
      obj.getAnnouncementFiles = GetAnnouncementFiles_Response.toJSON(message.getAnnouncementFiles);
    }
    if (message.getLockdownState !== undefined) {
      obj.getLockdownState = GetLockdownState_Response.toJSON(message.getLockdownState);
    }
    if (message.setLockdownState !== undefined) {
      obj.setLockdownState = SetLockdownState_Response.toJSON(message.setLockdownState);
    }
    if (message.getAutoLockdown !== undefined) {
      obj.getAutoLockdown = GetAutoLockdown_Response.toJSON(message.getAutoLockdown);
    }
    if (message.setAutoLockdown !== undefined) {
      obj.setAutoLockdown = SetAutoLockdown_Response.toJSON(message.setAutoLockdown);
    }
    if (message.getLockdownAnnouncements !== undefined) {
      obj.getLockdownAnnouncements = GetLockdownAnnouncements_Response.toJSON(message.getLockdownAnnouncements);
    }
    if (message.setLockdownAnnouncements !== undefined) {
      obj.setLockdownAnnouncements = SetLockdownAnnouncements_Response.toJSON(message.setLockdownAnnouncements);
    }
    if (message.getFluffFiles !== undefined) {
      obj.getFluffFiles = GetFluffFiles_Response.toJSON(message.getFluffFiles);
    }
    if (message.getFluffState !== undefined) {
      obj.getFluffState = GetFluffState_Response.toJSON(message.getFluffState);
    }
    if (message.setFluffState !== undefined) {
      obj.setFluffState = SetFluffState_Response.toJSON(message.setFluffState);
    }
    if (message.playAnnouncement !== undefined) {
      obj.playAnnouncement = PlayAnnouncement_Response.toJSON(message.playAnnouncement);
    }
    if (message.getModeSilentState !== undefined) {
      obj.getModeSilentState = GetModeSilentState_Response.toJSON(message.getModeSilentState);
    }
    if (message.setModeSilentState !== undefined) {
      obj.setModeSilentState = SetModeSilentState_Response.toJSON(message.setModeSilentState);
    }
    if (message.bombBase !== undefined) {
      obj.bombBase = BombBase_Response.toJSON(message.bombBase);
    }
    if (message.bombArea !== undefined) {
      obj.bombArea = BombArea_Response.toJSON(message.bombArea);
    }
    if (message.getBombAreaState !== undefined) {
      obj.getBombAreaState = GetBombAreaState_Response.toJSON(message.getBombAreaState);
    }
    if (message.getLightPowerState !== undefined) {
      obj.getLightPowerState = GetLightPowerState_Response.toJSON(message.getLightPowerState);
    }
    if (message.setLightPowerState !== undefined) {
      obj.setLightPowerState = SetLightPowerState_Response.toJSON(message.setLightPowerState);
    }
    if (message.getLightSwitchState !== undefined) {
      obj.getLightSwitchState = GetLightSwitchState_Response.toJSON(message.getLightSwitchState);
    }
    if (message.setLightSwitchState !== undefined) {
      obj.setLightSwitchState = SetLightSwitchState_Response.toJSON(message.setLightSwitchState);
    }
    if (message.getLightDmxState !== undefined) {
      obj.getLightDmxState = GetLightDmxState_Response.toJSON(message.getLightDmxState);
    }
    if (message.setLightDmxState !== undefined) {
      obj.setLightDmxState = SetLightDmxState_Response.toJSON(message.setLightDmxState);
    }
    if (message.getLightLockState !== undefined) {
      obj.getLightLockState = GetLightLockState_Response.toJSON(message.getLightLockState);
    }
    if (message.setLightLockState !== undefined) {
      obj.setLightLockState = SetLightLockState_Response.toJSON(message.setLightLockState);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<Response>, I>>(base?: I): Response {
    return Response.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<Response>, I>>(object: I): Response {
    const message = createBaseResponse();
    message.getPowerPlantState = (object.getPowerPlantState !== undefined && object.getPowerPlantState !== null)
      ? GetPowerPlantState_Response.fromPartial(object.getPowerPlantState)
      : undefined;
    message.setPowerPlantState = (object.setPowerPlantState !== undefined && object.setPowerPlantState !== null)
      ? SetPowerPlantState_Response.fromPartial(object.setPowerPlantState)
      : undefined;
    message.getAnnouncementFiles = (object.getAnnouncementFiles !== undefined && object.getAnnouncementFiles !== null)
      ? GetAnnouncementFiles_Response.fromPartial(object.getAnnouncementFiles)
      : undefined;
    message.getLockdownState = (object.getLockdownState !== undefined && object.getLockdownState !== null)
      ? GetLockdownState_Response.fromPartial(object.getLockdownState)
      : undefined;
    message.setLockdownState = (object.setLockdownState !== undefined && object.setLockdownState !== null)
      ? SetLockdownState_Response.fromPartial(object.setLockdownState)
      : undefined;
    message.getAutoLockdown = (object.getAutoLockdown !== undefined && object.getAutoLockdown !== null)
      ? GetAutoLockdown_Response.fromPartial(object.getAutoLockdown)
      : undefined;
    message.setAutoLockdown = (object.setAutoLockdown !== undefined && object.setAutoLockdown !== null)
      ? SetAutoLockdown_Response.fromPartial(object.setAutoLockdown)
      : undefined;
    message.getLockdownAnnouncements =
      (object.getLockdownAnnouncements !== undefined && object.getLockdownAnnouncements !== null)
        ? GetLockdownAnnouncements_Response.fromPartial(object.getLockdownAnnouncements)
        : undefined;
    message.setLockdownAnnouncements =
      (object.setLockdownAnnouncements !== undefined && object.setLockdownAnnouncements !== null)
        ? SetLockdownAnnouncements_Response.fromPartial(object.setLockdownAnnouncements)
        : undefined;
    message.getFluffFiles = (object.getFluffFiles !== undefined && object.getFluffFiles !== null)
      ? GetFluffFiles_Response.fromPartial(object.getFluffFiles)
      : undefined;
    message.getFluffState = (object.getFluffState !== undefined && object.getFluffState !== null)
      ? GetFluffState_Response.fromPartial(object.getFluffState)
      : undefined;
    message.setFluffState = (object.setFluffState !== undefined && object.setFluffState !== null)
      ? SetFluffState_Response.fromPartial(object.setFluffState)
      : undefined;
    message.playAnnouncement = (object.playAnnouncement !== undefined && object.playAnnouncement !== null)
      ? PlayAnnouncement_Response.fromPartial(object.playAnnouncement)
      : undefined;
    message.getModeSilentState = (object.getModeSilentState !== undefined && object.getModeSilentState !== null)
      ? GetModeSilentState_Response.fromPartial(object.getModeSilentState)
      : undefined;
    message.setModeSilentState = (object.setModeSilentState !== undefined && object.setModeSilentState !== null)
      ? SetModeSilentState_Response.fromPartial(object.setModeSilentState)
      : undefined;
    message.bombBase = (object.bombBase !== undefined && object.bombBase !== null)
      ? BombBase_Response.fromPartial(object.bombBase)
      : undefined;
    message.bombArea = (object.bombArea !== undefined && object.bombArea !== null)
      ? BombArea_Response.fromPartial(object.bombArea)
      : undefined;
    message.getBombAreaState = (object.getBombAreaState !== undefined && object.getBombAreaState !== null)
      ? GetBombAreaState_Response.fromPartial(object.getBombAreaState)
      : undefined;
    message.getLightPowerState = (object.getLightPowerState !== undefined && object.getLightPowerState !== null)
      ? GetLightPowerState_Response.fromPartial(object.getLightPowerState)
      : undefined;
    message.setLightPowerState = (object.setLightPowerState !== undefined && object.setLightPowerState !== null)
      ? SetLightPowerState_Response.fromPartial(object.setLightPowerState)
      : undefined;
    message.getLightSwitchState = (object.getLightSwitchState !== undefined && object.getLightSwitchState !== null)
      ? GetLightSwitchState_Response.fromPartial(object.getLightSwitchState)
      : undefined;
    message.setLightSwitchState = (object.setLightSwitchState !== undefined && object.setLightSwitchState !== null)
      ? SetLightSwitchState_Response.fromPartial(object.setLightSwitchState)
      : undefined;
    message.getLightDmxState = (object.getLightDmxState !== undefined && object.getLightDmxState !== null)
      ? GetLightDmxState_Response.fromPartial(object.getLightDmxState)
      : undefined;
    message.setLightDmxState = (object.setLightDmxState !== undefined && object.setLightDmxState !== null)
      ? SetLightDmxState_Response.fromPartial(object.setLightDmxState)
      : undefined;
    message.getLightLockState = (object.getLightLockState !== undefined && object.getLightLockState !== null)
      ? GetLightLockState_Response.fromPartial(object.getLightLockState)
      : undefined;
    message.setLightLockState = (object.setLightLockState !== undefined && object.setLightLockState !== null)
      ? SetLightLockState_Response.fromPartial(object.setLightLockState)
      : undefined;
    return message;
  },
};

function createBaseError(): Error {
  return { type: "", message: "" };
}

export const Error = {
  encode(message: Error, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.type !== "") {
      writer.uint32(10).string(message.type);
    }
    if (message.message !== "") {
      writer.uint32(18).string(message.message);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): Error {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseError();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.type = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.message = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): Error {
    return {
      type: isSet(object.type) ? globalThis.String(object.type) : "",
      message: isSet(object.message) ? globalThis.String(object.message) : "",
    };
  },

  toJSON(message: Error): unknown {
    const obj: any = {};
    if (message.type !== "") {
      obj.type = message.type;
    }
    if (message.message !== "") {
      obj.message = message.message;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<Error>, I>>(base?: I): Error {
    return Error.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<Error>, I>>(object: I): Error {
    const message = createBaseError();
    message.type = object.type ?? "";
    message.message = object.message ?? "";
    return message;
  },
};

function createBaseLsxMessage(): LsxMessage {
  return { id: "", request: undefined, response: undefined, error: undefined };
}

export const LsxMessage = {
  encode(message: LsxMessage, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.id !== "") {
      writer.uint32(10).string(message.id);
    }
    if (message.request !== undefined) {
      Request.encode(message.request, writer.uint32(18).fork()).ldelim();
    }
    if (message.response !== undefined) {
      Response.encode(message.response, writer.uint32(26).fork()).ldelim();
    }
    if (message.error !== undefined) {
      Error.encode(message.error, writer.uint32(34).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): LsxMessage {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseLsxMessage();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.id = reader.string();
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.request = Request.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 26) {
            break;
          }

          message.response = Response.decode(reader, reader.uint32());
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.error = Error.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): LsxMessage {
    return {
      id: isSet(object.id) ? globalThis.String(object.id) : "",
      request: isSet(object.request) ? Request.fromJSON(object.request) : undefined,
      response: isSet(object.response) ? Response.fromJSON(object.response) : undefined,
      error: isSet(object.error) ? Error.fromJSON(object.error) : undefined,
    };
  },

  toJSON(message: LsxMessage): unknown {
    const obj: any = {};
    if (message.id !== "") {
      obj.id = message.id;
    }
    if (message.request !== undefined) {
      obj.request = Request.toJSON(message.request);
    }
    if (message.response !== undefined) {
      obj.response = Response.toJSON(message.response);
    }
    if (message.error !== undefined) {
      obj.error = Error.toJSON(message.error);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<LsxMessage>, I>>(base?: I): LsxMessage {
    return LsxMessage.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<LsxMessage>, I>>(object: I): LsxMessage {
    const message = createBaseLsxMessage();
    message.id = object.id ?? "";
    message.request = (object.request !== undefined && object.request !== null)
      ? Request.fromPartial(object.request)
      : undefined;
    message.response = (object.response !== undefined && object.response !== null)
      ? Response.fromPartial(object.response)
      : undefined;
    message.error = (object.error !== undefined && object.error !== null) ? Error.fromPartial(object.error) : undefined;
    return message;
  },
};

function createBaseGetAnnouncementFiles(): GetAnnouncementFiles {
  return {};
}

export const GetAnnouncementFiles = {
  encode(_: GetAnnouncementFiles, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): GetAnnouncementFiles {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGetAnnouncementFiles();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): GetAnnouncementFiles {
    return {};
  },

  toJSON(_: GetAnnouncementFiles): unknown {
    const obj: any = {};
    return obj;
  },

  create<I extends Exact<DeepPartial<GetAnnouncementFiles>, I>>(base?: I): GetAnnouncementFiles {
    return GetAnnouncementFiles.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<GetAnnouncementFiles>, I>>(_: I): GetAnnouncementFiles {
    const message = createBaseGetAnnouncementFiles();
    return message;
  },
};

function createBaseGetAnnouncementFiles_Response(): GetAnnouncementFiles_Response {
  return { files: [] };
}

export const GetAnnouncementFiles_Response = {
  encode(message: GetAnnouncementFiles_Response, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    for (const v of message.files) {
      writer.uint32(10).string(v!);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): GetAnnouncementFiles_Response {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGetAnnouncementFiles_Response();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.files.push(reader.string());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): GetAnnouncementFiles_Response {
    return { files: globalThis.Array.isArray(object?.files) ? object.files.map((e: any) => globalThis.String(e)) : [] };
  },

  toJSON(message: GetAnnouncementFiles_Response): unknown {
    const obj: any = {};
    if (message.files?.length) {
      obj.files = message.files;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<GetAnnouncementFiles_Response>, I>>(base?: I): GetAnnouncementFiles_Response {
    return GetAnnouncementFiles_Response.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<GetAnnouncementFiles_Response>, I>>(
    object: I,
  ): GetAnnouncementFiles_Response {
    const message = createBaseGetAnnouncementFiles_Response();
    message.files = object.files?.map((e) => e) || [];
    return message;
  },
};

function createBaseGetAnnouncementFiles_Request(): GetAnnouncementFiles_Request {
  return {};
}

export const GetAnnouncementFiles_Request = {
  encode(_: GetAnnouncementFiles_Request, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): GetAnnouncementFiles_Request {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGetAnnouncementFiles_Request();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): GetAnnouncementFiles_Request {
    return {};
  },

  toJSON(_: GetAnnouncementFiles_Request): unknown {
    const obj: any = {};
    return obj;
  },

  create<I extends Exact<DeepPartial<GetAnnouncementFiles_Request>, I>>(base?: I): GetAnnouncementFiles_Request {
    return GetAnnouncementFiles_Request.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<GetAnnouncementFiles_Request>, I>>(_: I): GetAnnouncementFiles_Request {
    const message = createBaseGetAnnouncementFiles_Request();
    return message;
  },
};

function createBasePlayAnnouncement(): PlayAnnouncement {
  return {};
}

export const PlayAnnouncement = {
  encode(_: PlayAnnouncement, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): PlayAnnouncement {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePlayAnnouncement();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): PlayAnnouncement {
    return {};
  },

  toJSON(_: PlayAnnouncement): unknown {
    const obj: any = {};
    return obj;
  },

  create<I extends Exact<DeepPartial<PlayAnnouncement>, I>>(base?: I): PlayAnnouncement {
    return PlayAnnouncement.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<PlayAnnouncement>, I>>(_: I): PlayAnnouncement {
    const message = createBasePlayAnnouncement();
    return message;
  },
};

function createBasePlayAnnouncement_Request(): PlayAnnouncement_Request {
  return { filepath: "" };
}

export const PlayAnnouncement_Request = {
  encode(message: PlayAnnouncement_Request, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.filepath !== "") {
      writer.uint32(10).string(message.filepath);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): PlayAnnouncement_Request {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePlayAnnouncement_Request();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.filepath = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): PlayAnnouncement_Request {
    return { filepath: isSet(object.filepath) ? globalThis.String(object.filepath) : "" };
  },

  toJSON(message: PlayAnnouncement_Request): unknown {
    const obj: any = {};
    if (message.filepath !== "") {
      obj.filepath = message.filepath;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<PlayAnnouncement_Request>, I>>(base?: I): PlayAnnouncement_Request {
    return PlayAnnouncement_Request.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<PlayAnnouncement_Request>, I>>(object: I): PlayAnnouncement_Request {
    const message = createBasePlayAnnouncement_Request();
    message.filepath = object.filepath ?? "";
    return message;
  },
};

function createBasePlayAnnouncement_Response(): PlayAnnouncement_Response {
  return {};
}

export const PlayAnnouncement_Response = {
  encode(_: PlayAnnouncement_Response, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): PlayAnnouncement_Response {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBasePlayAnnouncement_Response();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): PlayAnnouncement_Response {
    return {};
  },

  toJSON(_: PlayAnnouncement_Response): unknown {
    const obj: any = {};
    return obj;
  },

  create<I extends Exact<DeepPartial<PlayAnnouncement_Response>, I>>(base?: I): PlayAnnouncement_Response {
    return PlayAnnouncement_Response.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<PlayAnnouncement_Response>, I>>(_: I): PlayAnnouncement_Response {
    const message = createBasePlayAnnouncement_Response();
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}
